/*
Infoblox IPAM API

OpenAPI specification for Infoblox NIOS WAPI IPAM objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the NetworkviewDdnsZonePrimariesDnsGridZone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkviewDdnsZonePrimariesDnsGridZone{}

// NetworkviewDdnsZonePrimariesDnsGridZone struct for NetworkviewDdnsZonePrimariesDnsGridZone
type NetworkviewDdnsZonePrimariesDnsGridZone struct {
	// The reference to the DNS zone object.
	Ref                  *string `json:"_ref,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NetworkviewDdnsZonePrimariesDnsGridZone NetworkviewDdnsZonePrimariesDnsGridZone

// NewNetworkviewDdnsZonePrimariesDnsGridZone instantiates a new NetworkviewDdnsZonePrimariesDnsGridZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkviewDdnsZonePrimariesDnsGridZone() *NetworkviewDdnsZonePrimariesDnsGridZone {
	this := NetworkviewDdnsZonePrimariesDnsGridZone{}
	return &this
}

// NewNetworkviewDdnsZonePrimariesDnsGridZoneWithDefaults instantiates a new NetworkviewDdnsZonePrimariesDnsGridZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkviewDdnsZonePrimariesDnsGridZoneWithDefaults() *NetworkviewDdnsZonePrimariesDnsGridZone {
	this := NetworkviewDdnsZonePrimariesDnsGridZone{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *NetworkviewDdnsZonePrimariesDnsGridZone) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkviewDdnsZonePrimariesDnsGridZone) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *NetworkviewDdnsZonePrimariesDnsGridZone) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *NetworkviewDdnsZonePrimariesDnsGridZone) SetRef(v string) {
	o.Ref = &v
}

func (o NetworkviewDdnsZonePrimariesDnsGridZone) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkviewDdnsZonePrimariesDnsGridZone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NetworkviewDdnsZonePrimariesDnsGridZone) UnmarshalJSON(data []byte) (err error) {
	varNetworkviewDdnsZonePrimariesDnsGridZone := _NetworkviewDdnsZonePrimariesDnsGridZone{}

	err = json.Unmarshal(data, &varNetworkviewDdnsZonePrimariesDnsGridZone)

	if err != nil {
		return err
	}

	*o = NetworkviewDdnsZonePrimariesDnsGridZone(varNetworkviewDdnsZonePrimariesDnsGridZone)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "_ref")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNetworkviewDdnsZonePrimariesDnsGridZone struct {
	value *NetworkviewDdnsZonePrimariesDnsGridZone
	isSet bool
}

func (v NullableNetworkviewDdnsZonePrimariesDnsGridZone) Get() *NetworkviewDdnsZonePrimariesDnsGridZone {
	return v.value
}

func (v *NullableNetworkviewDdnsZonePrimariesDnsGridZone) Set(val *NetworkviewDdnsZonePrimariesDnsGridZone) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkviewDdnsZonePrimariesDnsGridZone) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkviewDdnsZonePrimariesDnsGridZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkviewDdnsZonePrimariesDnsGridZone(val *NetworkviewDdnsZonePrimariesDnsGridZone) *NullableNetworkviewDdnsZonePrimariesDnsGridZone {
	return &NullableNetworkviewDdnsZonePrimariesDnsGridZone{value: val, isSet: true}
}

func (v NullableNetworkviewDdnsZonePrimariesDnsGridZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkviewDdnsZonePrimariesDnsGridZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
