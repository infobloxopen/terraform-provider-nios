/*
Infoblox SECURITY API

OpenAPI specification for Infoblox NIOS WAPI SECURITY objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package security

import (
	"encoding/json"
)

// checks if the CertificateAuthserviceOcspRespondersCertificateOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CertificateAuthserviceOcspRespondersCertificateOneOf{}

// CertificateAuthserviceOcspRespondersCertificateOneOf struct for CertificateAuthserviceOcspRespondersCertificateOneOf
type CertificateAuthserviceOcspRespondersCertificateOneOf struct {
	// The reference to the OCSP responder certificate.
	Ref *string `json:"_ref,omitempty"`
	// The certificate issuer subject name.
	Issuer *string `json:"issuer,omitempty"`
	// The certificate serial number in hex format.
	Serial *string `json:"serial,omitempty"`
	// The certificate subject name.
	Subject *string `json:"subject,omitempty"`
	// The date after which the certificate becomes invalid.
	ValidNotAfter *int32 `json:"valid_not_after,omitempty"`
	// The date before which the certificate is not valid.
	ValidNotBefore       *int32 `json:"valid_not_before,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CertificateAuthserviceOcspRespondersCertificateOneOf CertificateAuthserviceOcspRespondersCertificateOneOf

// NewCertificateAuthserviceOcspRespondersCertificateOneOf instantiates a new CertificateAuthserviceOcspRespondersCertificateOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateAuthserviceOcspRespondersCertificateOneOf() *CertificateAuthserviceOcspRespondersCertificateOneOf {
	this := CertificateAuthserviceOcspRespondersCertificateOneOf{}
	return &this
}

// NewCertificateAuthserviceOcspRespondersCertificateOneOfWithDefaults instantiates a new CertificateAuthserviceOcspRespondersCertificateOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateAuthserviceOcspRespondersCertificateOneOfWithDefaults() *CertificateAuthserviceOcspRespondersCertificateOneOf {
	this := CertificateAuthserviceOcspRespondersCertificateOneOf{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) SetRef(v string) {
	o.Ref = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetIssuer() string {
	if o == nil || IsNil(o.Issuer) {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) SetIssuer(v string) {
	o.Issuer = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetSerial() string {
	if o == nil || IsNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetSerialOk() (*string, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) SetSerial(v string) {
	o.Serial = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) SetSubject(v string) {
	o.Subject = &v
}

// GetValidNotAfter returns the ValidNotAfter field value if set, zero value otherwise.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetValidNotAfter() int32 {
	if o == nil || IsNil(o.ValidNotAfter) {
		var ret int32
		return ret
	}
	return *o.ValidNotAfter
}

// GetValidNotAfterOk returns a tuple with the ValidNotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetValidNotAfterOk() (*int32, bool) {
	if o == nil || IsNil(o.ValidNotAfter) {
		return nil, false
	}
	return o.ValidNotAfter, true
}

// HasValidNotAfter returns a boolean if a field has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) HasValidNotAfter() bool {
	if o != nil && !IsNil(o.ValidNotAfter) {
		return true
	}

	return false
}

// SetValidNotAfter gets a reference to the given int32 and assigns it to the ValidNotAfter field.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) SetValidNotAfter(v int32) {
	o.ValidNotAfter = &v
}

// GetValidNotBefore returns the ValidNotBefore field value if set, zero value otherwise.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetValidNotBefore() int32 {
	if o == nil || IsNil(o.ValidNotBefore) {
		var ret int32
		return ret
	}
	return *o.ValidNotBefore
}

// GetValidNotBeforeOk returns a tuple with the ValidNotBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) GetValidNotBeforeOk() (*int32, bool) {
	if o == nil || IsNil(o.ValidNotBefore) {
		return nil, false
	}
	return o.ValidNotBefore, true
}

// HasValidNotBefore returns a boolean if a field has been set.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) HasValidNotBefore() bool {
	if o != nil && !IsNil(o.ValidNotBefore) {
		return true
	}

	return false
}

// SetValidNotBefore gets a reference to the given int32 and assigns it to the ValidNotBefore field.
func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) SetValidNotBefore(v int32) {
	o.ValidNotBefore = &v
}

func (o CertificateAuthserviceOcspRespondersCertificateOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CertificateAuthserviceOcspRespondersCertificateOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["_ref"] = o.Ref
	}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.ValidNotAfter) {
		toSerialize["valid_not_after"] = o.ValidNotAfter
	}
	if !IsNil(o.ValidNotBefore) {
		toSerialize["valid_not_before"] = o.ValidNotBefore
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CertificateAuthserviceOcspRespondersCertificateOneOf) UnmarshalJSON(data []byte) (err error) {
	varCertificateAuthserviceOcspRespondersCertificateOneOf := _CertificateAuthserviceOcspRespondersCertificateOneOf{}

	err = json.Unmarshal(data, &varCertificateAuthserviceOcspRespondersCertificateOneOf)

	if err != nil {
		return err
	}

	*o = CertificateAuthserviceOcspRespondersCertificateOneOf(varCertificateAuthserviceOcspRespondersCertificateOneOf)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "_ref")
		delete(additionalProperties, "issuer")
		delete(additionalProperties, "serial")
		delete(additionalProperties, "subject")
		delete(additionalProperties, "valid_not_after")
		delete(additionalProperties, "valid_not_before")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCertificateAuthserviceOcspRespondersCertificateOneOf struct {
	value *CertificateAuthserviceOcspRespondersCertificateOneOf
	isSet bool
}

func (v NullableCertificateAuthserviceOcspRespondersCertificateOneOf) Get() *CertificateAuthserviceOcspRespondersCertificateOneOf {
	return v.value
}

func (v *NullableCertificateAuthserviceOcspRespondersCertificateOneOf) Set(val *CertificateAuthserviceOcspRespondersCertificateOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateAuthserviceOcspRespondersCertificateOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateAuthserviceOcspRespondersCertificateOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateAuthserviceOcspRespondersCertificateOneOf(val *CertificateAuthserviceOcspRespondersCertificateOneOf) *NullableCertificateAuthserviceOcspRespondersCertificateOneOf {
	return &NullableCertificateAuthserviceOcspRespondersCertificateOneOf{value: val, isSet: true}
}

func (v NullableCertificateAuthserviceOcspRespondersCertificateOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateAuthserviceOcspRespondersCertificateOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
